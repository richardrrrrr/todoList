// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using todoList.Entity;

#nullable disable

namespace todoList.Migrations
{
    [DbContext(typeof(TodolistDbContext))]
    partial class TodolistDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("todoList.Models.account", b =>
                {
                    b.Property<int>("Account_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Account_ID"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Account_ID");

                    b.ToTable("Accounts", (string)null);

                    b.HasData(
                        new
                        {
                            Account_ID = 1,
                            Password = "password1",
                            Role = 1,
                            UserName = "user1"
                        },
                        new
                        {
                            Account_ID = 2,
                            Password = "password2",
                            Role = 2,
                            UserName = "user2"
                        },
                        new
                        {
                            Account_ID = 3,
                            Password = "password3",
                            Role = 2,
                            UserName = "user3"
                        });
                });

            modelBuilder.Entity("todoList.Models.todolist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Account_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Complete_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Account_ID");

                    b.ToTable("Todolists ", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account_ID = 1,
                            Created_at = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsComplete = false,
                            Name = "TodoItem1",
                            Priority = 1
                        },
                        new
                        {
                            Id = 2,
                            Account_ID = 1,
                            Complete_at = new DateTime(2023, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created_at = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsComplete = true,
                            Name = "TodoItem2",
                            Priority = 2
                        },
                        new
                        {
                            Id = 3,
                            Account_ID = 2,
                            Created_at = new DateTime(2023, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsComplete = false,
                            Name = "TodoItem3",
                            Priority = 3
                        });
                });

            modelBuilder.Entity("todoList.Models.todolist", b =>
                {
                    b.HasOne("todoList.Models.account", "Account")
                        .WithMany("TodoList")
                        .HasForeignKey("Account_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("todoList.Models.account", b =>
                {
                    b.Navigation("TodoList");
                });
#pragma warning restore 612, 618
        }
    }
}
